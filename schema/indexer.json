{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Azure Search Indexer",
  "type": "object",
  "properties": {
    "name": {
      "externalDocs": {
        "url": "https://docs.microsoft.com/rest/api/searchservice/Naming-rules"
      },
      "type": "string",
      "description": "The name of the indexer."
    },
    "description": {
      "type": [
        "string",
        "null"
      ],
      "description": "The description of the indexer."
    },
    "dataSourceName": {
      "type": "string",
      "description": "The name of the datasource from which this indexer reads data."
    },
    "skillsetName": {
      "type": [
        "string",
        "null"
      ],
      "description": "The name of the skillset executing with this indexer."
    },
    "targetIndexName": {
      "type": "string",
      "description": "The name of the index to which this indexer writes data."
    },
    "schedule": {
      "$ref": "#/definitions/IndexingSchedule",
      "description": "The schedule for this indexer."
    },
    "parameters": {
      "$ref": "#/definitions/IndexingParameters",
      "description": "Parameters for indexer execution."
    },
    "fieldMappings": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/FieldMapping"
      },
      "description": "Defines mappings between fields in the data source and corresponding target fields in the index.",
      "externalDocs": {
        "url": "https://docs.microsoft.com/azure/search/search-indexer-field-mappings"
      }
    },
    "outputFieldMappings": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/FieldMapping"
      },
      "description": "Output field mappings are applied after enrichment and immediately before indexing.",
      "externalDocs": {
        "url": "https://docs.microsoft.com/azure/search/search-indexer-field-mappings"
      }
    },
    "disabled": {
      "x-ms-client-name": "IsDisabled",
      "type": [
        "boolean",
        "null"
      ],
      "default": false,
      "description": "A value indicating whether the indexer is disabled. Default is false."
    },
    "encryptionKey": {
      "$ref": "#/definitions/SearchResourceEncryptionKey",
      "description": "A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019.",
      "externalDocs": {
        "url": "https://aka.ms/azure-search-encryption-with-cmk"
      }
    },
    "cache": {
      "$ref": "#/definitions/SearchIndexerCache",
      "x-nullable": true,
      "description": "Adds caching to an enrichment pipeline to allow for incremental modification steps without having to rebuild the index every time.",
      "externalDocs": {
        "url": "https://docs.microsoft.com/azure/search/search-howto-incremental-index"
      }
    }
  },
  "required": [
    "name",
    "dataSourceName",
    "targetIndexName"
  ],
  "additionalProperties": false,
  "definitions": {
    "IndexingSchedule": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "interval": {
          "type": "string",
          "format": "duration",
          "description": "The interval of time between indexer executions."
        },
        "startTime": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "description": "The time when an indexer should start running."
        }
      },
      "required": [
        "interval"
      ],
      "description": "Represents a schedule for indexer execution."
    },
    "IndexingParameters": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "batchSize": {
          "type": [
            "integer",
            "null"
          ],
          "format": "int32",
          "description": "The number of items that are read from the data source and indexed as a single batch in order to improve performance. The default depends on the data source type."
        },
        "maxFailedItems": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "The maximum number of items that can fail indexing for indexer execution to still be considered successful. -1 means no limit. Default is 0."
        },
        "maxFailedItemsPerBatch": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "The maximum number of items in a single batch that can fail indexing for the batch to still be considered successful. -1 means no limit. Default is 0."
        },
        "executionEnvironment": {
          "type": [
            "string",
            "null"
          ],
          "default": "Standard",
          "enum": [
            "Standard",
            "Private"
          ],
          "description": "Overrides the execution environment chosen by internal system processes. Explicitly setting the execution environment to Private is required if indexers are accessing external resources over private endpoint connections."
        },
        "configuration": {
          "type": "object",
          "properties": {
            "parsingMode": {
              "type": "string",
              "enum": [
                "default",
                "text",
                "delimitedText",
                "json",
                "jsonArray",
                "jsonLines"
              ],
              "description": "For Azure blobs, set to text to improve indexing performance on plain text files in blob storage. \n\nFor CSV blobs, set to delimitedText when blobs are plain CSV files. \n\nFor JSON blobs, set to json to extract structured content or to jsonArray to extract individual elements of an array as separate documents in Azure Cognitive Search. Use jsonLines to extract individual JSON entities, separated by a new line, as separate documents in Azure Cognitive Search."
            },
            "excludedFileNameExtensions": {
              "type": "string",
              "default": "",
              "description": "Comma-delimited list of filename extensions to ignore when processing from Azure blob storage.  For example, you could exclude \".png, .mp4\" to skip over those files during indexing."
            },
            "indexedFileNameExtensions": {
              "type": "string",
              "default": "",
              "description": "Comma-delimited list of filename extensions to select when processing from Azure blob storage.  For example, you could focus indexing on specific application files \".docx, .pptx, .msg\" to specifically include those file types."
            },
            "failOnUnsupportedContentType": {
              "type": "boolean",
              "default": false,
              "description": "For Azure blobs, set to false if you want to continue indexing when an unsupported content type is encountered, and you don't know all the content types (file extensions) in advance."
            },
            "failOnUnprocessableDocument": {
              "type": "boolean",
              "default": false,
              "description": "For Azure blobs, set to false if you want to continue indexing if a document fails indexing."
            },
            "indexStorageMetadataOnlyForOversizedDocuments": {
              "type": "boolean",
              "default": false,
              "description": "For Azure blobs, set this property to true to still index storage metadata for blob content that is too large to process. Oversized blobs are treated as errors by default. For limits on blob size, see https://docs.microsoft.com/azure/search/search-limits-quotas-capacity."
            },
            "delimitedTextHeaders": {
              "type": "string",
              "description": "For CSV blobs, specifies a comma-delimited list of column headers, useful for mapping source fields to destination fields in an index."
            },
            "delimitedTextDelimiter": {
              "type": "string",
              "description": "For CSV blobs, specifies the end-of-line single-character delimiter for CSV files where each line starts a new document (for example, \"|\")."
            },
            "firstLineContainsHeaders": {
              "type": "boolean",
              "default": true,
              "description": "For CSV blobs, indicates that the first (non-blank) line of each blob contains headers."
            },
            "documentRoot": {
              "type": "string",
              "description": "For JSON arrays, given a structured or semi-structured document, you can specify a path to the array using this property."
            },
            "dataToExtract": {
              "type": "string",
              "enum": [
                "storageMetadata",
                "allMetadata",
                "contentAndMetadata"
              ],
              "default": "contentAndMetadata",
              "description": "Specifies the data to extract from Azure blob storage and tells the indexer which data to extract from image content when \"imageAction\" is set to a value other than \"none\".  This applies to embedded image content in a .PDF or other application, or image files such as .jpg and .png, in Azure blobs."
            },
            "imageAction": {
              "type": "string",
              "enum": [
                "none",
                "generateNormalizedImages",
                "generateNormalizedImagePerPage"
              ],
              "default": "none",
              "description": "Determines how to process embedded images and image files in Azure blob storage.  Setting the \"imageAction\" configuration to any value other than \"none\" requires that a skillset also be attached to that indexer."
            },
            "allowSkillsetToReadFileData": {
              "type": "boolean",
              "default": false,
              "description": "If true, will create a path //document//file_data that is an object representing the original file data downloaded from your blob data source.  This allows you to pass the original file data to a custom skill for processing within the enrichment pipeline, or to the Document Extraction skill."
            },
            "pdfTextRotationAlgorithm": {
              "type": "string",
              "enum": [
                "none",
                "detectAngles"
              ],
              "default": "none",
              "description": "Determines algorithm for text extraction from PDF files in Azure blob storage."
            },
            "executionEnvironment": {
              "type": "string",
              "enum": [
                "standard",
                "private"
              ],
              "default": "standard",
              "description": "Specifies the environment in which the indexer should execute."
            },
            "queryTimeout": {
              "type": "string",
              "default": "00:05:00",
              "description": "Increases the timeout beyond the 5-minute default for Azure SQL database data sources, specified in the format \"hh:mm:ss\"."
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "description": "A dictionary of indexer-specific configuration properties. Each name is the name of a specific property. Each value must be of a primitive type."
        }
      },
      "description": "Represents parameters for indexer execution.",
      "x-ms-external": true,
      "externalDocs": {
        "url": "https://docs.microsoft.com/rest/api/searchservice/create-indexer#parameters"
      }
    },
    "FieldMapping": {
      "type": "object",
      "properties": {
        "sourceFieldName": {
          "type": "string",
          "description": "The name of the field in the data source."
        },
        "targetFieldName": {
          "type": "string",
          "description": "The name of the target field in the index. Same as the source field name by default."
        },
        "mappingFunction": {
          "$ref": "#/definitions/FieldMappingFunction",
          "description": "A function to apply to each source field value before indexing."
        }
      },
      "required": [
        "sourceFieldName",
        "targetFieldName"
      ]
    },
    "FieldMappingFunction": {
      "properties": {
        "name": {
          "type": [
            "string",
            "null"
          ],
          "description": "The name of the field mapping function.",
          "enum": [
            "base64Encode",
            "base64Decode",
            "extractTokenAtPosition",
            "jsonArrayToStringCollection",
            "urlEncode",
            "urlDecode",
            "fixedLengthEncode"
          ]
        },
        "parameters": {
          "type": [
            "object",
            "null"
          ],
          "description": "A dictionary of parameter name/value pairs to pass to the function. Each value must be of a primitive type."
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "name": {
                "const": "base64Encode"
              }
            }
          },
          "then": {
            "properties": {
              "parameters": {
                "properties": {
                  "useHttpServerUtilityUrlTokenEncode": {
                    "type": "boolean",
                    "default": true
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "name": {
                "const": "base64Decode"
              }
            }
          },
          "then": {
            "properties": {
              "parameters": {
                "properties": {
                  "useHttpServerUtilityUrlTokenDecode": {
                    "type": "boolean",
                    "default": true
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "name": {
                "const": "extractTokenAtPosition"
              }
            }
          },
          "then": {
            "properties": {
              "parameters": {
                "properties": {
                  "delimiter": {
                    "type": "string",
                    "description": "A string to use as the separator when splitting the input string."
                  },
                  "position": {
                    "type": "integer",
                    "description": "An integer zero-based position of the token to pick after the input string is split."
                  }
                }
              }
            }
          }
        }
      ],
      "required": [
        "name"
      ],
      "description": "Represents a function that transforms a value from a data source before indexing.",
      "externalDocs": {
        "url": "https://docs.microsoft.com/azure/search/search-indexer-field-mappings"
      }
    },
    "SearchResourceEncryptionKey": {
      "type": [
        "object",
        "null"
      ],
      "description": "A customer-managed encryption key in Azure Key Vault. Keys that you create and manage can be used to encrypt or decrypt data-at-rest in Azure Cognitive Search, such as indexes and synonym maps.",
      "properties": {
        "keyVaultKeyName": {
          "type": "string",
          "description": "The name of your Azure Key Vault key to be used to encrypt your data at rest."
        },
        "keyVaultKeyVersion": {
          "type": "string",
          "description": "The version of your Azure Key Vault key to be used to encrypt your data at rest."
        },
        "keyVaultUri": {
          "type": "string",
          "description": "The URI of your Azure Key Vault, also referred to as DNS name, that contains the key to be used to encrypt your data at rest. An example URI might be https://my-keyvault-name.vault.azure.net."
        },
        "accessCredentials": {
          "$ref": "#/definitions/AzureActiveDirectoryApplicationCredentials",
          "description": "Optional Azure Active Directory credentials used for accessing your Azure Key Vault. Not required if using managed identity instead.",
          "externalDocs": {
            "url": "https://aka.ms/azure-search-msi"
          }
        },
        "identity": {
          "$ref": "#/definitions/SearchIndexerDataIdentity",
          "x-nullable": true,
          "description": "An explicit managed identity to use for this encryption key. If not specified and the access credentials property is null, the system-assigned managed identity is used. On update to the resource, if the explicit identity is unspecified, it remains unchanged. If \"none\" is specified, the value of this property is cleared."
        }
      },
      "required": [
        "keyVaultKeyName",
        "keyVaultKeyVersion",
        "keyVaultUri"
      ]
    },
    "AzureActiveDirectoryApplicationCredentials": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "applicationId": {
          "type": "string",
          "description": "An AAD Application ID that was granted the required access permissions to the Azure Key Vault that is to be used when encrypting your data at rest. The Application ID should not be confused with the Object ID for your AAD Application."
        },
        "applicationSecret": {
          "type": [
            "string",
            "null"
          ],
          "description": "The authentication key of the specified AAD application."
        }
      },
      "required": [
        "applicationId"
      ],
      "description": "Credentials of a registered application created for your search service, used for authenticated access to the encryption keys stored in Azure Key Vault."
    },
    "SearchIndexerCache": {
      "properties": {
        "storageConnectionString": {
          "type": "string",
          "description": "The connection string to the storage account where the cache data will be persisted."
        },
        "enableReprocessing": {
          "type": "boolean",
          "x-nullable": true,
          "description": "Specifies whether incremental reprocessing is enabled."
        }
      }
    }
  }
}